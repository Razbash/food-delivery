{"version":3,"file":"static/js/446.60cb38e1.chunk.js","mappings":"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","sources":["screens/Auth/components/AuthForm.tsx","screens/Auth/AuthPage.tsx","ui/Form/components/Input.tsx","ui/Form/components/Checkbox.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { Notification, NotificationTypes, startNotification } from '../../../components/Notification';\nimport { useAppDispatch, useAppSelector } from '../../../store/redux';\nimport { fetchUser } from '../../../store/User/userActions';\nimport { Checkbox, Input } from '../../../ui/Form';\nimport { setCookie } from '../../../utils/cookie/cookie';\nimport { CompanyLogo, CompanyLogoColors } from '../../Layouts/components/CompanyLogo';\nimport EyeIcon from '../../../ui/icons/EyeIcon';\n\nconst AuthForm = () => {\n    const [loginInput, setLoginInput] = useState<string>('');\n    const [passwordInput, setPasswordInput] = useState<string>('');\n    const [keppLogin, setKeepLogin] = useState<boolean>(false);\n\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const {error, user} = useAppSelector(state => state.user);\n\n    const onAuth = async(event: React.ChangeEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        await dispatch(fetchUser(loginInput));\n    };\n\n    useEffect(() => {\n        const yearInMilliseconds = new Date(Date.now() + (86400e3 * 365)).toUTCString();\n\n        if (user && user.password === passwordInput) {\n            keppLogin\n                ? setCookie('userId', user.id, yearInMilliseconds)\n                : setCookie('userId', user.id);\n\n            dispatch(startNotification({\n                type: NotificationTypes.sucsses,\n                text: 'Welcome!',\n            }));\n\n            navigate('/');\n        } else if (user !== null) {\n            dispatch(startNotification({\n                type: NotificationTypes.error,\n                text: 'The username or password is entered incorrectly, or such an account does not exist.',\n            }));\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (error) {\n            dispatch(startNotification({\n                type: NotificationTypes.error,\n                text: `${error}`,\n            }));\n        }\n    }, [error]);\n\n    return(\n        <div className=\"auth-form\">\n            <div className=\"auth-form__wrapper\">\n                <CompanyLogo color={CompanyLogoColors.black}/>\n\n                <h1 className=\"auth-form__title\">Login</h1>\n                <p className=\"auth-form__subtitle\">Sign in with your data that you entered during your registration.</p>\n\n                <form action=\"#\" className=\"auth-form__form\" onSubmit={onAuth}>\n                    <Input label=\"Email\"\n                        type=\"email\"\n                        id=\"email\"\n                        isRequired={true}\n                        placeholder=\"name@example.com\"\n                        value={loginInput}\n                        onChange={setLoginInput}\n                    />\n\n                    <Input label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        isRequired={true}\n                        placeholder=\"password\"\n                        value={passwordInput}\n                        onChange={setPasswordInput}\n                        icon={<EyeIcon/>}\n                        autocomplete=\"on\"\n                    />\n\n                    <Checkbox\n                        id=\"keep-login\"\n                        label=\"Keep me logged in\"\n                        value={keppLogin}\n                        setValue={setKeepLogin}\n                    />\n\n                    <button className=\"button button--contained\"  type=\"submit\">Login</button>\n                </form>\n\n                <span className=\"auth-form__sign-up\">\n                    Donâ€™t have an account?&nbsp;\n\n                    <Link to=\"/registration\" className=\"auth-form__sign-up-link\">\n                        Sign up\n                    </Link>\n                </span>\n            </div>\n\n            <Notification/>\n        </div>\n    );\n};\n\nexport default AuthForm;","import AuthForm from './components/AuthForm';\nimport './auth.scss';\n\nconst AuthPage = () => {\n    return(\n        <div className=\"auth\">\n            <div className=\"auth__login\">\n                <AuthForm/>\n            </div>\n            <div className=\"auth__background\">\n                <div className=\"auth__gallery\">\n                    <img src=\"../../assets/images/auth/auth-page-image.png\"\n                        alt=\"Auth\"\n                        className=\"auth__image auth__image--primary\"\n                    />\n                    <img src=\"../../assets/images/auth/auth-page-image-2.png\"\n                        alt=\"Auth\"\n                        className=\"auth__image auth__image--secondary\"\n                    />\n                    <img src=\"../../assets/images/auth/auth-page-image-3.png\"\n                        alt=\"Auth\"\n                        className=\"auth__image auth__image--thirty\"\n                        width={300}\n                    />\n\n                    <div className=\"auth__info\">\n                        <h3 className=\"auth__title\">Leave reviews for all meals</h3>\n                        <p className=\"auth__text\">Lorem ipsum dolor sit amet, magna scaevola his ei. Cum te paulo probatus molestiae, eirmod assentior eum ne, et omnis antiopam mel.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;","import IInput from '../interfaces/IInput';\nimport '../form.scss';\n\nconst Input = ({\n    label,\n    id,\n    value,\n    placeholder,\n    onChange,\n    icon,\n    isRequired = false,\n    type = 'text',\n    autocomplete = 'off',\n}: IInput) => {\n    const onSetValue = (value: string) => {\n        onChange(value);\n    };\n\n    return(\n        <div className=\"input-wrapper\">\n            <label htmlFor={id} className=\"input-label\">{label}</label>\n\n            <div className=\"input-with-icon\">\n                <input type={type}\n                    id={id}\n                    className=\"input\"\n                    required={isRequired}\n                    placeholder={placeholder}\n                    value={value}\n                    autoComplete={autocomplete}\n                    onChange={(e) => onSetValue(e.target.value)}\n                />\n\n                {icon ? icon : null}\n            </div>\n        </div>\n    );\n};\n\nexport default Input;","import ICheckbox from '../interfaces/ICheckbox';\nimport '../form.scss';\n\nconst Checkbox = ({id, label, value, setValue}: ICheckbox) => {\n    const onSetValue = () => {\n        setValue(!value);\n    };\n\n    return(\n        <label className=\"checkbox\">\n            <input type=\"checkbox\"\n                id={id}\n                className=\"checkbox__input\"\n                checked={value}\n                onChange={onSetValue}\n            />\n\n            <span className=\"checkbox__label\">{label}</span>\n        </label>\n    );\n};\n\nexport default Checkbox;"],"names":["useState","loginInput","setLoginInput","passwordInput","setPasswordInput","keppLogin","setKeepLogin","dispatch","useAppDispatch","navigate","useNavigate","useAppSelector","state","user","error","onAuth","event","preventDefault","fetchUser","useEffect","yearInMilliseconds","Date","now","toUTCString","password","setCookie","id","startNotification","type","NotificationTypes","text","className","CompanyLogo","color","CompanyLogoColors","action","onSubmit","I","label","isRequired","placeholder","value","onChange","icon","EyeIcon","autocomplete","setValue","to","Notification","src","alt","width","onSetValue","htmlFor","required","autoComplete","e","target","checked"],"sourceRoot":""}